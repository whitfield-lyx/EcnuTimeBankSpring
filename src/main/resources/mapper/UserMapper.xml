<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.ecnu_time_bank.mapper.UserMapper">
  <resultMap id="BaseResultMap" type="com.example.ecnu_time_bank.entity.User">
    <constructor>
      <idArg column="user_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="user_name" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="user_type" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="user_password" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="user_telephone" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="user_gender" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="user_balance" javaType="java.lang.Double" jdbcType="DOUBLE" />
      <arg column="user_student_id" javaType="java.lang.String" jdbcType="VARCHAR" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    user_id, user_name, user_type, user_password, user_telephone, user_gender, user_balance,
    user_student_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from user
    where user_id = #{userId,jdbcType=INTEGER}
  </select>
    <select id="selectByUserName" parameterType="java.lang.String" resultMap="BaseResultMap">
      select
      <include refid="Base_Column_List" />
      from user
      where user_name = #{userName,jdbcType=VARCHAR}
    </select>
    <select id="selectAllUser" resultMap="BaseResultMap">
      select
      <include refid="Base_Column_List" />
      from user
    </select>
  <select id="selectByConditions" parameterType="com.example.ecnu_time_bank.entity.User"
          resultType="com.example.ecnu_time_bank.entity.User">
      SELECT * FROM user
      <where>
        <if test="userName != null">
          user_name = #{userName,jdbcType=VARCHAR}
        </if>
        <if test="userType != null">
          AND user_type = #{userType,jdbcType=VARCHAR}
        </if>
        <if test="userTelephone != null">
          AND user_telephone = #{userTelephone,jdbcType=VARCHAR}
        </if>
        <if test="userGender != null">
          AND user_gender = #{userGender,jdbcType=VARCHAR}
        </if>
        <if test="userStudentId != null">
          AND user_student_id = #{userStudentId,jdbcType=VARCHAR}
        </if>
      </where>
  </select>
    <select id="selectByTelephone" parameterType="java.lang.String" resultMap="BaseResultMap">
      select
      <include refid="Base_Column_List" />
      from user
      where user_telephone = #{userTelephone,jdbcType=VARCHAR}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user
    where user_id = #{userId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.ecnu_time_bank.entity.User">
    insert into user (user_id, user_name, user_type,
      user_password, user_telephone, user_gender,
      user_balance, user_student_id)
    values (#{userId,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, #{userType,jdbcType=VARCHAR},
      #{userPassword,jdbcType=VARCHAR}, #{userTelephone,jdbcType=VARCHAR}, #{userGender,jdbcType=VARCHAR},
      #{userBalance,jdbcType=DOUBLE}, #{userStudentId,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.example.ecnu_time_bank.entity.User">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="userType != null">
        user_type,
      </if>
      <if test="userPassword != null">
        user_password,
      </if>
      <if test="userTelephone != null">
        user_telephone,
      </if>
      <if test="userGender != null">
        user_gender,
      </if>
      <if test="userBalance != null">
        user_balance,
      </if>
      <if test="userStudentId != null">
        user_student_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userType != null">
        #{userType,jdbcType=VARCHAR},
      </if>
      <if test="userPassword != null">
        #{userPassword,jdbcType=VARCHAR},
      </if>
      <if test="userTelephone != null">
        #{userTelephone,jdbcType=VARCHAR},
      </if>
      <if test="userGender != null">
        #{userGender,jdbcType=VARCHAR},
      </if>
      <if test="userBalance != null">
        #{userBalance,jdbcType=DOUBLE},
      </if>
      <if test="userStudentId != null">
        #{userStudentId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.ecnu_time_bank.entity.User">
    update user
    <set>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userType != null">
        user_type = #{userType,jdbcType=VARCHAR},
      </if>
      <if test="userPassword != null">
        user_password = #{userPassword,jdbcType=VARCHAR},
      </if>
      <if test="userTelephone != null">
        user_telephone = #{userTelephone,jdbcType=VARCHAR},
      </if>
      <if test="userGender != null">
        user_gender = #{userGender,jdbcType=VARCHAR},
      </if>
      <if test="userBalance != null">
        user_balance = #{userBalance,jdbcType=DOUBLE},
      </if>
      <if test="userStudentId != null">
        user_student_id = #{userStudentId,jdbcType=VARCHAR},
      </if>
    </set>
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.ecnu_time_bank.entity.User">
    update user
    set user_name = #{userName,jdbcType=VARCHAR},
      user_type = #{userType,jdbcType=VARCHAR},
      user_password = #{userPassword,jdbcType=VARCHAR},
      user_telephone = #{userTelephone,jdbcType=VARCHAR},
      user_gender = #{userGender,jdbcType=VARCHAR},
      user_balance = #{userBalance,jdbcType=DOUBLE},
      user_student_id = #{userStudentId,jdbcType=VARCHAR}
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
</mapper>
